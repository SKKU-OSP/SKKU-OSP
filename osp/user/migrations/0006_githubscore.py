# Generated by Django 3.2.12 on 2022-06-28 08:05

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0005_accountinterest'),
    ]

    operations = [
        migrations.CreateModel(
            name='GithubScore',
            fields=[
                ('yid', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('github_id', models.CharField(max_length=45)),
                ('year', models.IntegerField()),
                ('excellent_contributor', models.IntegerField()),
                ('best_repo', models.CharField(max_length=100)),
                ('guideline_score', models.FloatField()),
                ('code_score', models.FloatField()),
                ('other_project_score', models.FloatField()),
                ('contributor_score', models.FloatField()),
                ('star_score', models.FloatField()),
                ('contribution_score', models.FloatField()),
                ('star_count', models.IntegerField()),
                ('commit_count', models.IntegerField()),
                ('pr_count', models.IntegerField()),
                ('issue_count', models.IntegerField()),
                ('star_owner_count', models.IntegerField()),
                ('fork_owner_count', models.IntegerField()),
                ('score_10000L_sub', models.FloatField()),
                ('score_10000L_add', models.FloatField()),
                ('score_10000L_sum', models.FloatField()),
                ('score_50C', models.FloatField()),
                ('score_pr_issue', models.FloatField()),
                ('guideline_score_v2', models.FloatField()),
                ('repo_score_sub', models.FloatField()),
                ('repo_score_add', models.FloatField()),
                ('repo_score_sum', models.FloatField()),
                ('score_star', models.FloatField()),
                ('score_fork', models.FloatField()),
                ('score_other_repo_sub', models.FloatField()),
                ('score_other_repo_add', models.FloatField()),
                ('score_other_repo_sum', models.FloatField()),
                ('additional_score_sub', models.FloatField()),
                ('additional_score_add', models.FloatField()),
                ('additional_score_sum', models.FloatField()),
            ],
            options={
                'db_table': 'github_score',
                'managed': False,
            },
        ),
    ]
